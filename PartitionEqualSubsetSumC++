Given an array arr[] of size N, check if it can be partitioned into two parts such that the sum of elements in both parts is the same.

int equalPartition(int n, int arr[])
    {
        // code here
        int sum=0;
        for(int i=0; i<n; i++)
            sum+=arr[i];
            
        int tsum=sum/2;
        
        if(sum%2!=0)
        return 0;
        
        int t[n+1][tsum+1];
        
        //initialization
        for(int i=0; i<n+1; i++)
        {
            for(int j=0; j<tsum+1; j++)
            {
                if(i==0)
                t[i][j]=0;
                
                if(j==0)
                 t[i][j]=1;
            }
            
        }
        
        //implementation using DP
        for(int i=1; i<n+1; i++)
        {
            for(int j=1; j<tsum+1; j++)
            {
                if(arr[i-1]<=j)
                t[i][j]=t[i-1][j] || t[i-1][j-arr[i-1]];
                else
                 t[i][j]=t[i-1][j];
            }
            
        }
        
        return t[n][tsum];
    }
